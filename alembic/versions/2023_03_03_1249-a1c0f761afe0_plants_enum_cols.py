"""Plants enum cols.

Revision ID: a1c0f761afe0
Revises: 1b84384bae57
Create Date: 2023-03-03 12:49:43.726932
"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "a1c0f761afe0"
down_revision = "1b84384bae57"
branch_labels = None
depends_on = None


def upgrade() -> None:
    from sqlalchemy.dialects import postgresql

    op.execute(
        "UPDATE plants \
        SET cancellation_reason = (CASE \
            WHEN cancellation_reason = 'Winter Damage' THEN 'WINTER_DAMAGE' \
            WHEN cancellation_reason = 'Dried Out' THEN 'DRIEDOUT' \
            WHEN cancellation_reason = 'Mould' THEN 'MOULD' \
            WHEN cancellation_reason = 'Mites' THEN 'MITES' \
            WHEN cancellation_reason = 'Other Insects' THEN 'OTHER_INSECTS' \
            WHEN cancellation_reason = 'Abandonment' THEN 'ABANDONMENT' \
            WHEN cancellation_reason = 'Gift' THEN 'GIFT' \
            WHEN cancellation_reason = 'Sale' THEN 'SALE' \
            WHEN cancellation_reason = 'Others' THEN 'OTHERS' \
         END);"
    )
    enum_new_type = postgresql.ENUM(
        "ABANDONMENT",
        "DRIEDOUT",
        "GIFT",
        "MITES",
        "MOULD",
        "OTHERS",
        "OTHER_INSECTS",
        "SALE",
        "WINTER_DAMAGE",
        name="fbcancellationreason",
    )
    enum_new_type.create(op.get_bind())
    op.execute(
        "ALTER TABLE plants ALTER COLUMN cancellation_reason TYPE fbcancellationreason USING cancellation_reason::text::fbcancellationreason"
    )

    op.execute(
        "UPDATE plants \
        SET propagation_type = (CASE \
            WHEN propagation_type = 'seed (collected)' THEN 'SEED_COLLECTED' \
            WHEN propagation_type = 'offset' THEN 'OFFSET' \
            WHEN propagation_type = 'acquired as plant' THEN 'ACQUIRED_AS_PLANT' \
            WHEN propagation_type = 'bulbil' THEN 'BULBIL' \
            WHEN propagation_type = 'head cutting' THEN 'HEAD_CUTTING' \
            WHEN propagation_type = 'leaf cutting' THEN 'LEAF_CUTTING' \
            WHEN propagation_type = 'seed (purchased)' THEN 'SEED_PURCHASED' \
            WHEN propagation_type = 'unknown' THEN 'UNKNOWN' \
            WHEN propagation_type = '' THEN 'NONE' \
         END);"
    )
    enum_new_type = postgresql.ENUM(
        "ACQUIRED_AS_PLANT",
        "BULBIL",
        "HEAD_CUTTING",
        "LEAF_CUTTING",
        "NONE",
        "OFFSET",
        "SEED_COLLECTED",
        "SEED_PURCHASED",
        "UNKNOWN",
        name="fbpropagationtype",
    )
    enum_new_type.create(op.get_bind())
    op.execute(
        "ALTER TABLE plants ALTER COLUMN propagation_type TYPE fbpropagationtype USING propagation_type::text::fbpropagationtype"
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
