"""Add new florescence property cols.

Revision ID: 265262ee2f76
Revises: a916c5152b05
Create Date: 2023-01-28 18:44:34.985141
"""
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision = "265262ee2f76"
down_revision = "a916c5152b05"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "florescence",
        sa.Column("perianth_length", sa.Numeric(precision=3, scale=1), nullable=True),
    )
    op.add_column(
        "florescence",
        sa.Column("perianth_diameter", sa.Numeric(precision=2, scale=1), nullable=True),
    )
    op.add_column(
        "florescence", sa.Column("flower_color", sa.VARCHAR(length=7), nullable=True)
    )
    op.add_column(
        "florescence",
        sa.Column("flower_color_second", sa.VARCHAR(length=7), nullable=True),
    )

    from sqlalchemy.dialects import postgresql

    flower_colors_differentiation = postgresql.ENUM(
        "TOP_BOTTOM", "OVARY_MOUTH", name="flowercolordifferentiation"
    )
    flower_colors_differentiation.create(op.get_bind())
    op.add_column(
        "florescence",
        sa.Column(
            "flower_colors_differentiation",
            sa.Enum("TOP_BOTTOM", "OVARY_MOUTH", name="flowercolordifferentiation"),
            nullable=True,
        ),
    )

    stigma_position = postgresql.ENUM(
        "EXSERTED", "MOUTH", "INSERTED", "DEEPLY_INSERTED", name="stigmaposition"
    )
    stigma_position.create(op.get_bind())
    op.add_column(
        "florescence",
        sa.Column(
            "stigma_position",
            sa.Enum(
                "EXSERTED",
                "MOUTH",
                "INSERTED",
                "DEEPLY_INSERTED",
                name="stigmaposition",
            ),
            nullable=True,
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("florescence", "stigma_position")
    stigma_position = postgresql.ENUM(
        "EXSERTED", "MOUTH", "INSERTED", "DEEPLY_INSERTED", name="stigmaposition"
    )
    stigma_position.drop(op.get_bind())

    op.drop_column("florescence", "flower_colors_differentiation")
    flower_colors_differentiation = postgresql.ENUM(
        "TOP_BOTTOM", "OVARY_MOUTH", name="flowercolordifferentiation"
    )
    flower_colors_differentiation.drop(op.get_bind())

    op.drop_column("florescence", "flower_color_second")
    op.drop_column("florescence", "flower_color")
    op.drop_column("florescence", "perianth_diameter")
    op.drop_column("florescence", "perianth_length")
    # ### end Alembic commands ###
